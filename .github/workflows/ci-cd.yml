name: CI/CD Workflow

on:
  push:
    branches:
      - dev
      - main

permissions:
  contents: write  # Active les permissions pour pousser du contenu

jobs:
  build-and-merge-main:
    if: github.ref == 'refs/heads/dev'
    runs-on: ubuntu-latest
    steps:
      # 1. Checkout Code
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      # 2. Ensure main branch exists
      - name: Ensure main branch exists
        run: |
          git checkout -b main || git checkout main

      # 3. Merge dev into main
      - name: Merge dev into main
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git checkout main
          git merge dev
          git push origin main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


  # Job 2: Build, Test, and Deploy on main Merge
  deploy:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      # 1. Checkout Code
      - name: Checkout Code
        uses: actions/checkout@v3

      # 2. Install Backend Dependencies
      - name: Install Backend Dependencies
        run: |
          cd backend
          npm install

      # 3. Run Backend Tests
      - name: Run Backend Tests
        run: |
          cd backend
          npm test

      # 4. Install Frontend Dependencies
      - name: Install Frontend Dependencies
        run: |
          cd frontend
          npm install

      # 5. Run Frontend Tests
      - name: Run Frontend Tests
        run: |
          cd frontend
          npm test

      # 6. Build Docker Images
      - name: Build Docker Images
        run: docker compose build

      # 7. Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # 8. Push Docker Images to Docker Hub
      - name: Push Docker Images
        run: docker compose push
